// Generated by CoffeeScript 1.6.3
(function() {
  var FreeDrawTool, Tool,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Tool = ((typeof window !== "undefined" && window !== null ? window.MarkingSurface : void 0) || require('marking-surface')).Tool;

  FreeDrawTool = (function(_super) {
    __extends(FreeDrawTool, _super);

    FreeDrawTool.prototype.stroke = 'currentColor';

    FreeDrawTool.prototype.strokeWidth = 1;

    FreeDrawTool.prototype.fill = "rgba(255, 0, 0, 0.3)";

    function FreeDrawTool() {
      this.moveMark = __bind(this.moveMark, this);
      this.startMove = __bind(this.startMove, this);
      FreeDrawTool.__super__.constructor.apply(this, arguments);
      this.mark.relPath = [];
      this.path = this.addShape('path', {
        stroke: this.stroke,
        fill: "transparent",
        strokeWidth: 1
      });
      this.path.addEvent("start", this.startMove);
      this.path.addEvent("move", this.moveMark);
    }

    FreeDrawTool.prototype.onInitialStart = function(e) {
      var x, y, _ref;
      FreeDrawTool.__super__.onInitialStart.apply(this, arguments);
      _ref = this.coords(e), x = _ref.x, y = _ref.y;
      this.mark.startingPoint = [x, y];
      return this.mark.relPath.push([0, 0]);
    };

    FreeDrawTool.prototype.onInitialMove = function(e) {
      var x, y, _ref;
      FreeDrawTool.__super__.onInitialMove.apply(this, arguments);
      _ref = this.coords(e), x = _ref.x, y = _ref.y;
      this.mark.relPath.push([this.xDiff(x), this.yDiff(y)]);
      this.mark.set({
        startingPoint: this.mark.startingPoint,
        relPath: this.mark.relPath
      });
      return this.render();
    };

    FreeDrawTool.prototype.onInitialRelease = function(e) {
      FreeDrawTool.__super__.onInitialRelease.apply(this, arguments);
      this.path.attr({
        fill: this.fill
      });
      return this.render();
    };

    FreeDrawTool.prototype.xDiff = function(x) {
      var p;
      return x - (this.mark.startingPoint[0] + ((function() {
        var _i, _len, _ref, _results;
        _ref = this.mark.relPath;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          p = _ref[_i];
          _results.push(p[0]);
        }
        return _results;
      }).call(this)).reduce(function(acc, p) {
        return acc + p;
      }));
    };

    FreeDrawTool.prototype.yDiff = function(y) {
      var p;
      return y - (this.mark.startingPoint[1] + ((function() {
        var _i, _len, _ref, _results;
        _ref = this.mark.relPath;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          p = _ref[_i];
          _results.push(p[1]);
        }
        return _results;
      }).call(this)).reduce(function(acc, p) {
        return acc + p;
      }));
    };

    FreeDrawTool.prototype.startMove = function(e) {
      var x, y, _ref;
      _ref = this.coords(e), x = _ref.x, y = _ref.y;
      this.xOffset = x - this.mark.startingPoint[0];
      return this.yOffset = y - this.mark.startingPoint[1];
    };

    FreeDrawTool.prototype.moveMark = function(e) {
      var x, y, _ref;
      _ref = this.coords(e), x = _ref.x, y = _ref.y;
      this.mark.startingPoint = [x - this.xOffset, y - this.yOffset];
      return this.mark.set({
        startingPoint: this.mark.startingPoint
      });
    };

    FreeDrawTool.prototype.render = function() {
      FreeDrawTool.__super__.render.apply(this, arguments);
      if (this.mark.relPath.length > 1) {
        return this.path.attr({
          d: this.pathDescription()
        });
      }
    };

    FreeDrawTool.prototype.pathDescription = function() {
      return "m " + this.mark.startingPoint + ", " + (this.mark.relPath.join(',')) + " " + (this.isComplete() ? ' Z' : '');
    };

    return FreeDrawTool;

  })(Tool);

  if (typeof window !== "undefined" && window !== null) {
    window.MarkingSurface.FreeDrawTool = FreeDrawTool;
  }

  if (typeof module !== "undefined" && module !== null) {
    module.exports = FreeDrawTool;
  }

}).call(this);
